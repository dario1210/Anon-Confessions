{
    "swagger": "2.0",
    "info": {
        "description": "A privacy-focused backend service that allows users to:\n• Post and manage anonymous confessions.\n• React to posts with likes and comments.\n• Leave comments on confessions.\n• Receive real-time updates through WebSocket.\n\nThe API is designed with RESTful principles, uses SQLite for data storage, and ensures anonymity without storing personal information.",
        "title": "Anonymous Confessions API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost: cfg.Port",
    "basePath": "/api/v1",
    "paths": {
        "/posts": {
            "get": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Fetches a collection of posts. Requires authentication using X-Account-Number.                           If both sorting options are provided, priority will be given to the SortByCreationDate field.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Retrieve a collection of posts",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "",
                        "description": "Sort by creation date (asc or desc)",
                        "name": "creation_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "",
                        "description": "Sort by likes (asc or desc)",
                        "name": "sort_by_likes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{} if no posts are found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve posts",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Allows authenticated users to create a new post using their X-Account-Number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create a new post",
                "parameters": [
                    {
                        "description": "Post content",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Invalid or missing X-Account-Number",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Fetches a post using its unique ID. Requires authentication using X-Account-Number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Retrieve a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.GetPost"
                        }
                    },
                    "400": {
                        "description": "Invalid post ID",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid X-Account-Number",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve post",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Deletes a post using its unique ID. Requires the user to be logged in and authenticated using X-Account-Number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Delete a post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid post ID",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user or missing X-Account-Number",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Failed to delete post",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Updates a post's content. Requires the user to be authenticated using X-Account-Number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update a post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post content",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or parameters",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Post not found or no updates applied",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Failed to update post",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/posts/{id}/comments": {
            "get": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Fetches all comments associated with a specific post ID. Requires authentication using X-Account-Number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Retrieve comments for a post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Comment"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve comments",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Allows authenticated users to add a comment to a specific post. Requires authentication using X-Account-Number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Create a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment content",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Invalid or missing X-Account-Number",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/posts/{id}/comments/{commentId}": {
            "delete": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Deletes a specific comment from a post. The user must be authenticated and authorized to delete the comment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid post ID or comment ID",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Post not found or comment not found",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Failed to delete comment",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Updates the content of a specific comment in a post. Requires authentication using X-Account-Number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated comment content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or input",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Invalid or missing X-Account-Number",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Post or comment not found",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Failed to update comment",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/posts/{id}/likes": {
            "patch": {
                "security": [
                    {
                        "AccountNumberAuth": []
                    }
                ],
                "description": "Updates the like status of a post. Requires the user to be authenticated using X-Account-Number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Like or Unlike a post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action to like or unlike the post",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateLikesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Action applied successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or parameters",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Post not found or action not applied",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Failed to apply action on the post",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Generate a new 16-digit anonymous account number and return it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helper.ErrorMessage": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "helper.SuccessMessage": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "postId": {
                    "type": "integer"
                }
            }
        },
        "models.CreateCommentRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "minLength": 2
                }
            }
        },
        "models.GetPost": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isLiked": {
                    "type": "integer"
                },
                "totalLikes": {
                    "type": "integer"
                }
            }
        },
        "models.PostRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "minLength": 2
                }
            }
        },
        "models.UpdateLikesRequest": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "Like",
                        "Unlike"
                    ]
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AccountNumberAuth": {
            "description": "A unique account number for user authentication.",
            "type": "apiKey",
            "name": "X-Account-Number",
            "in": "header"
        }
    }
}